/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as R9SnapshotRouteImport } from './routes/9-snapshot'
import { Route as R8StateRouteImport } from './routes/8-state'
import { Route as R7EventRouteImport } from './routes/7-event'
import { Route as R6ListRouteImport } from './routes/6-list'
import { Route as R5ConditionalRouteImport } from './routes/5-conditional'
import { Route as R4ChildrenRouteImport } from './routes/4-children'
import { Route as R30CustomHooksRouteImport } from './routes/30-custom-hooks'
import { Route as R3PropsRouteImport } from './routes/3-props'
import { Route as R29ForwardRefRouteImport } from './routes/29-forward-ref'
import { Route as R28UseRefRouteImport } from './routes/28-use-ref'
import { Route as R27UiComponentRouteImport } from './routes/27-ui-component'
import { Route as R26ContextRouteImport } from './routes/26-context'
import { Route as R25UseMemoRouteImport } from './routes/25-use-memo'
import { Route as R24ReducerRouteImport } from './routes/24-reducer'
import { Route as R23DuplicationRouteImport } from './routes/23-duplication'
import { Route as R22RedundantRouteImport } from './routes/22-redundant'
import { Route as R21ContradictionsRouteImport } from './routes/21-contradictions'
import { Route as R20GroupStateRouteImport } from './routes/20-group-state'
import { Route as R2ComponentsRouteImport } from './routes/2-components'
import { Route as R19CleanupRouteImport } from './routes/19-cleanup'
import { Route as R18UseEffectArgsRouteImport } from './routes/18-use-effect-args'
import { Route as R17ReRenderRouteImport } from './routes/17-re-render'
import { Route as R16ImpureComponentRouteImport } from './routes/16-impure-component'
import { Route as R15SideEffectRouteImport } from './routes/15-side-effect'
import { Route as R14PreserveResetStateRouteImport } from './routes/14-preserve-reset-state'
import { Route as R13EventEmissionRouteImport } from './routes/13-event-emission'
import { Route as R12TwoWayBindingRouteImport } from './routes/12-two-way-binding'
import { Route as R11ImmerRouteImport } from './routes/11-immer'
import { Route as R10ReferenceTypesRouteImport } from './routes/10-reference-types'
import { Route as R1JsxRouteImport } from './routes/1-jsx'
import { Route as IndexRouteImport } from './routes/index'

const R9SnapshotRoute = R9SnapshotRouteImport.update({
  id: '/9-snapshot',
  path: '/9-snapshot',
  getParentRoute: () => rootRouteImport,
} as any)
const R8StateRoute = R8StateRouteImport.update({
  id: '/8-state',
  path: '/8-state',
  getParentRoute: () => rootRouteImport,
} as any)
const R7EventRoute = R7EventRouteImport.update({
  id: '/7-event',
  path: '/7-event',
  getParentRoute: () => rootRouteImport,
} as any)
const R6ListRoute = R6ListRouteImport.update({
  id: '/6-list',
  path: '/6-list',
  getParentRoute: () => rootRouteImport,
} as any)
const R5ConditionalRoute = R5ConditionalRouteImport.update({
  id: '/5-conditional',
  path: '/5-conditional',
  getParentRoute: () => rootRouteImport,
} as any)
const R4ChildrenRoute = R4ChildrenRouteImport.update({
  id: '/4-children',
  path: '/4-children',
  getParentRoute: () => rootRouteImport,
} as any)
const R30CustomHooksRoute = R30CustomHooksRouteImport.update({
  id: '/30-custom-hooks',
  path: '/30-custom-hooks',
  getParentRoute: () => rootRouteImport,
} as any)
const R3PropsRoute = R3PropsRouteImport.update({
  id: '/3-props',
  path: '/3-props',
  getParentRoute: () => rootRouteImport,
} as any)
const R29ForwardRefRoute = R29ForwardRefRouteImport.update({
  id: '/29-forward-ref',
  path: '/29-forward-ref',
  getParentRoute: () => rootRouteImport,
} as any)
const R28UseRefRoute = R28UseRefRouteImport.update({
  id: '/28-use-ref',
  path: '/28-use-ref',
  getParentRoute: () => rootRouteImport,
} as any)
const R27UiComponentRoute = R27UiComponentRouteImport.update({
  id: '/27-ui-component',
  path: '/27-ui-component',
  getParentRoute: () => rootRouteImport,
} as any)
const R26ContextRoute = R26ContextRouteImport.update({
  id: '/26-context',
  path: '/26-context',
  getParentRoute: () => rootRouteImport,
} as any)
const R25UseMemoRoute = R25UseMemoRouteImport.update({
  id: '/25-use-memo',
  path: '/25-use-memo',
  getParentRoute: () => rootRouteImport,
} as any)
const R24ReducerRoute = R24ReducerRouteImport.update({
  id: '/24-reducer',
  path: '/24-reducer',
  getParentRoute: () => rootRouteImport,
} as any)
const R23DuplicationRoute = R23DuplicationRouteImport.update({
  id: '/23-duplication',
  path: '/23-duplication',
  getParentRoute: () => rootRouteImport,
} as any)
const R22RedundantRoute = R22RedundantRouteImport.update({
  id: '/22-redundant',
  path: '/22-redundant',
  getParentRoute: () => rootRouteImport,
} as any)
const R21ContradictionsRoute = R21ContradictionsRouteImport.update({
  id: '/21-contradictions',
  path: '/21-contradictions',
  getParentRoute: () => rootRouteImport,
} as any)
const R20GroupStateRoute = R20GroupStateRouteImport.update({
  id: '/20-group-state',
  path: '/20-group-state',
  getParentRoute: () => rootRouteImport,
} as any)
const R2ComponentsRoute = R2ComponentsRouteImport.update({
  id: '/2-components',
  path: '/2-components',
  getParentRoute: () => rootRouteImport,
} as any)
const R19CleanupRoute = R19CleanupRouteImport.update({
  id: '/19-cleanup',
  path: '/19-cleanup',
  getParentRoute: () => rootRouteImport,
} as any)
const R18UseEffectArgsRoute = R18UseEffectArgsRouteImport.update({
  id: '/18-use-effect-args',
  path: '/18-use-effect-args',
  getParentRoute: () => rootRouteImport,
} as any)
const R17ReRenderRoute = R17ReRenderRouteImport.update({
  id: '/17-re-render',
  path: '/17-re-render',
  getParentRoute: () => rootRouteImport,
} as any)
const R16ImpureComponentRoute = R16ImpureComponentRouteImport.update({
  id: '/16-impure-component',
  path: '/16-impure-component',
  getParentRoute: () => rootRouteImport,
} as any)
const R15SideEffectRoute = R15SideEffectRouteImport.update({
  id: '/15-side-effect',
  path: '/15-side-effect',
  getParentRoute: () => rootRouteImport,
} as any)
const R14PreserveResetStateRoute = R14PreserveResetStateRouteImport.update({
  id: '/14-preserve-reset-state',
  path: '/14-preserve-reset-state',
  getParentRoute: () => rootRouteImport,
} as any)
const R13EventEmissionRoute = R13EventEmissionRouteImport.update({
  id: '/13-event-emission',
  path: '/13-event-emission',
  getParentRoute: () => rootRouteImport,
} as any)
const R12TwoWayBindingRoute = R12TwoWayBindingRouteImport.update({
  id: '/12-two-way-binding',
  path: '/12-two-way-binding',
  getParentRoute: () => rootRouteImport,
} as any)
const R11ImmerRoute = R11ImmerRouteImport.update({
  id: '/11-immer',
  path: '/11-immer',
  getParentRoute: () => rootRouteImport,
} as any)
const R10ReferenceTypesRoute = R10ReferenceTypesRouteImport.update({
  id: '/10-reference-types',
  path: '/10-reference-types',
  getParentRoute: () => rootRouteImport,
} as any)
const R1JsxRoute = R1JsxRouteImport.update({
  id: '/1-jsx',
  path: '/1-jsx',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/1-jsx': typeof R1JsxRoute
  '/10-reference-types': typeof R10ReferenceTypesRoute
  '/11-immer': typeof R11ImmerRoute
  '/12-two-way-binding': typeof R12TwoWayBindingRoute
  '/13-event-emission': typeof R13EventEmissionRoute
  '/14-preserve-reset-state': typeof R14PreserveResetStateRoute
  '/15-side-effect': typeof R15SideEffectRoute
  '/16-impure-component': typeof R16ImpureComponentRoute
  '/17-re-render': typeof R17ReRenderRoute
  '/18-use-effect-args': typeof R18UseEffectArgsRoute
  '/19-cleanup': typeof R19CleanupRoute
  '/2-components': typeof R2ComponentsRoute
  '/20-group-state': typeof R20GroupStateRoute
  '/21-contradictions': typeof R21ContradictionsRoute
  '/22-redundant': typeof R22RedundantRoute
  '/23-duplication': typeof R23DuplicationRoute
  '/24-reducer': typeof R24ReducerRoute
  '/25-use-memo': typeof R25UseMemoRoute
  '/26-context': typeof R26ContextRoute
  '/27-ui-component': typeof R27UiComponentRoute
  '/28-use-ref': typeof R28UseRefRoute
  '/29-forward-ref': typeof R29ForwardRefRoute
  '/3-props': typeof R3PropsRoute
  '/30-custom-hooks': typeof R30CustomHooksRoute
  '/4-children': typeof R4ChildrenRoute
  '/5-conditional': typeof R5ConditionalRoute
  '/6-list': typeof R6ListRoute
  '/7-event': typeof R7EventRoute
  '/8-state': typeof R8StateRoute
  '/9-snapshot': typeof R9SnapshotRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/1-jsx': typeof R1JsxRoute
  '/10-reference-types': typeof R10ReferenceTypesRoute
  '/11-immer': typeof R11ImmerRoute
  '/12-two-way-binding': typeof R12TwoWayBindingRoute
  '/13-event-emission': typeof R13EventEmissionRoute
  '/14-preserve-reset-state': typeof R14PreserveResetStateRoute
  '/15-side-effect': typeof R15SideEffectRoute
  '/16-impure-component': typeof R16ImpureComponentRoute
  '/17-re-render': typeof R17ReRenderRoute
  '/18-use-effect-args': typeof R18UseEffectArgsRoute
  '/19-cleanup': typeof R19CleanupRoute
  '/2-components': typeof R2ComponentsRoute
  '/20-group-state': typeof R20GroupStateRoute
  '/21-contradictions': typeof R21ContradictionsRoute
  '/22-redundant': typeof R22RedundantRoute
  '/23-duplication': typeof R23DuplicationRoute
  '/24-reducer': typeof R24ReducerRoute
  '/25-use-memo': typeof R25UseMemoRoute
  '/26-context': typeof R26ContextRoute
  '/27-ui-component': typeof R27UiComponentRoute
  '/28-use-ref': typeof R28UseRefRoute
  '/29-forward-ref': typeof R29ForwardRefRoute
  '/3-props': typeof R3PropsRoute
  '/30-custom-hooks': typeof R30CustomHooksRoute
  '/4-children': typeof R4ChildrenRoute
  '/5-conditional': typeof R5ConditionalRoute
  '/6-list': typeof R6ListRoute
  '/7-event': typeof R7EventRoute
  '/8-state': typeof R8StateRoute
  '/9-snapshot': typeof R9SnapshotRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/1-jsx': typeof R1JsxRoute
  '/10-reference-types': typeof R10ReferenceTypesRoute
  '/11-immer': typeof R11ImmerRoute
  '/12-two-way-binding': typeof R12TwoWayBindingRoute
  '/13-event-emission': typeof R13EventEmissionRoute
  '/14-preserve-reset-state': typeof R14PreserveResetStateRoute
  '/15-side-effect': typeof R15SideEffectRoute
  '/16-impure-component': typeof R16ImpureComponentRoute
  '/17-re-render': typeof R17ReRenderRoute
  '/18-use-effect-args': typeof R18UseEffectArgsRoute
  '/19-cleanup': typeof R19CleanupRoute
  '/2-components': typeof R2ComponentsRoute
  '/20-group-state': typeof R20GroupStateRoute
  '/21-contradictions': typeof R21ContradictionsRoute
  '/22-redundant': typeof R22RedundantRoute
  '/23-duplication': typeof R23DuplicationRoute
  '/24-reducer': typeof R24ReducerRoute
  '/25-use-memo': typeof R25UseMemoRoute
  '/26-context': typeof R26ContextRoute
  '/27-ui-component': typeof R27UiComponentRoute
  '/28-use-ref': typeof R28UseRefRoute
  '/29-forward-ref': typeof R29ForwardRefRoute
  '/3-props': typeof R3PropsRoute
  '/30-custom-hooks': typeof R30CustomHooksRoute
  '/4-children': typeof R4ChildrenRoute
  '/5-conditional': typeof R5ConditionalRoute
  '/6-list': typeof R6ListRoute
  '/7-event': typeof R7EventRoute
  '/8-state': typeof R8StateRoute
  '/9-snapshot': typeof R9SnapshotRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/1-jsx'
    | '/10-reference-types'
    | '/11-immer'
    | '/12-two-way-binding'
    | '/13-event-emission'
    | '/14-preserve-reset-state'
    | '/15-side-effect'
    | '/16-impure-component'
    | '/17-re-render'
    | '/18-use-effect-args'
    | '/19-cleanup'
    | '/2-components'
    | '/20-group-state'
    | '/21-contradictions'
    | '/22-redundant'
    | '/23-duplication'
    | '/24-reducer'
    | '/25-use-memo'
    | '/26-context'
    | '/27-ui-component'
    | '/28-use-ref'
    | '/29-forward-ref'
    | '/3-props'
    | '/30-custom-hooks'
    | '/4-children'
    | '/5-conditional'
    | '/6-list'
    | '/7-event'
    | '/8-state'
    | '/9-snapshot'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/1-jsx'
    | '/10-reference-types'
    | '/11-immer'
    | '/12-two-way-binding'
    | '/13-event-emission'
    | '/14-preserve-reset-state'
    | '/15-side-effect'
    | '/16-impure-component'
    | '/17-re-render'
    | '/18-use-effect-args'
    | '/19-cleanup'
    | '/2-components'
    | '/20-group-state'
    | '/21-contradictions'
    | '/22-redundant'
    | '/23-duplication'
    | '/24-reducer'
    | '/25-use-memo'
    | '/26-context'
    | '/27-ui-component'
    | '/28-use-ref'
    | '/29-forward-ref'
    | '/3-props'
    | '/30-custom-hooks'
    | '/4-children'
    | '/5-conditional'
    | '/6-list'
    | '/7-event'
    | '/8-state'
    | '/9-snapshot'
  id:
    | '__root__'
    | '/'
    | '/1-jsx'
    | '/10-reference-types'
    | '/11-immer'
    | '/12-two-way-binding'
    | '/13-event-emission'
    | '/14-preserve-reset-state'
    | '/15-side-effect'
    | '/16-impure-component'
    | '/17-re-render'
    | '/18-use-effect-args'
    | '/19-cleanup'
    | '/2-components'
    | '/20-group-state'
    | '/21-contradictions'
    | '/22-redundant'
    | '/23-duplication'
    | '/24-reducer'
    | '/25-use-memo'
    | '/26-context'
    | '/27-ui-component'
    | '/28-use-ref'
    | '/29-forward-ref'
    | '/3-props'
    | '/30-custom-hooks'
    | '/4-children'
    | '/5-conditional'
    | '/6-list'
    | '/7-event'
    | '/8-state'
    | '/9-snapshot'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R1JsxRoute: typeof R1JsxRoute
  R10ReferenceTypesRoute: typeof R10ReferenceTypesRoute
  R11ImmerRoute: typeof R11ImmerRoute
  R12TwoWayBindingRoute: typeof R12TwoWayBindingRoute
  R13EventEmissionRoute: typeof R13EventEmissionRoute
  R14PreserveResetStateRoute: typeof R14PreserveResetStateRoute
  R15SideEffectRoute: typeof R15SideEffectRoute
  R16ImpureComponentRoute: typeof R16ImpureComponentRoute
  R17ReRenderRoute: typeof R17ReRenderRoute
  R18UseEffectArgsRoute: typeof R18UseEffectArgsRoute
  R19CleanupRoute: typeof R19CleanupRoute
  R2ComponentsRoute: typeof R2ComponentsRoute
  R20GroupStateRoute: typeof R20GroupStateRoute
  R21ContradictionsRoute: typeof R21ContradictionsRoute
  R22RedundantRoute: typeof R22RedundantRoute
  R23DuplicationRoute: typeof R23DuplicationRoute
  R24ReducerRoute: typeof R24ReducerRoute
  R25UseMemoRoute: typeof R25UseMemoRoute
  R26ContextRoute: typeof R26ContextRoute
  R27UiComponentRoute: typeof R27UiComponentRoute
  R28UseRefRoute: typeof R28UseRefRoute
  R29ForwardRefRoute: typeof R29ForwardRefRoute
  R3PropsRoute: typeof R3PropsRoute
  R30CustomHooksRoute: typeof R30CustomHooksRoute
  R4ChildrenRoute: typeof R4ChildrenRoute
  R5ConditionalRoute: typeof R5ConditionalRoute
  R6ListRoute: typeof R6ListRoute
  R7EventRoute: typeof R7EventRoute
  R8StateRoute: typeof R8StateRoute
  R9SnapshotRoute: typeof R9SnapshotRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/9-snapshot': {
      id: '/9-snapshot'
      path: '/9-snapshot'
      fullPath: '/9-snapshot'
      preLoaderRoute: typeof R9SnapshotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/8-state': {
      id: '/8-state'
      path: '/8-state'
      fullPath: '/8-state'
      preLoaderRoute: typeof R8StateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/7-event': {
      id: '/7-event'
      path: '/7-event'
      fullPath: '/7-event'
      preLoaderRoute: typeof R7EventRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/6-list': {
      id: '/6-list'
      path: '/6-list'
      fullPath: '/6-list'
      preLoaderRoute: typeof R6ListRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/5-conditional': {
      id: '/5-conditional'
      path: '/5-conditional'
      fullPath: '/5-conditional'
      preLoaderRoute: typeof R5ConditionalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/4-children': {
      id: '/4-children'
      path: '/4-children'
      fullPath: '/4-children'
      preLoaderRoute: typeof R4ChildrenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/30-custom-hooks': {
      id: '/30-custom-hooks'
      path: '/30-custom-hooks'
      fullPath: '/30-custom-hooks'
      preLoaderRoute: typeof R30CustomHooksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/3-props': {
      id: '/3-props'
      path: '/3-props'
      fullPath: '/3-props'
      preLoaderRoute: typeof R3PropsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/29-forward-ref': {
      id: '/29-forward-ref'
      path: '/29-forward-ref'
      fullPath: '/29-forward-ref'
      preLoaderRoute: typeof R29ForwardRefRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/28-use-ref': {
      id: '/28-use-ref'
      path: '/28-use-ref'
      fullPath: '/28-use-ref'
      preLoaderRoute: typeof R28UseRefRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/27-ui-component': {
      id: '/27-ui-component'
      path: '/27-ui-component'
      fullPath: '/27-ui-component'
      preLoaderRoute: typeof R27UiComponentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/26-context': {
      id: '/26-context'
      path: '/26-context'
      fullPath: '/26-context'
      preLoaderRoute: typeof R26ContextRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/25-use-memo': {
      id: '/25-use-memo'
      path: '/25-use-memo'
      fullPath: '/25-use-memo'
      preLoaderRoute: typeof R25UseMemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/24-reducer': {
      id: '/24-reducer'
      path: '/24-reducer'
      fullPath: '/24-reducer'
      preLoaderRoute: typeof R24ReducerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/23-duplication': {
      id: '/23-duplication'
      path: '/23-duplication'
      fullPath: '/23-duplication'
      preLoaderRoute: typeof R23DuplicationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/22-redundant': {
      id: '/22-redundant'
      path: '/22-redundant'
      fullPath: '/22-redundant'
      preLoaderRoute: typeof R22RedundantRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/21-contradictions': {
      id: '/21-contradictions'
      path: '/21-contradictions'
      fullPath: '/21-contradictions'
      preLoaderRoute: typeof R21ContradictionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/20-group-state': {
      id: '/20-group-state'
      path: '/20-group-state'
      fullPath: '/20-group-state'
      preLoaderRoute: typeof R20GroupStateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/2-components': {
      id: '/2-components'
      path: '/2-components'
      fullPath: '/2-components'
      preLoaderRoute: typeof R2ComponentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/19-cleanup': {
      id: '/19-cleanup'
      path: '/19-cleanup'
      fullPath: '/19-cleanup'
      preLoaderRoute: typeof R19CleanupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/18-use-effect-args': {
      id: '/18-use-effect-args'
      path: '/18-use-effect-args'
      fullPath: '/18-use-effect-args'
      preLoaderRoute: typeof R18UseEffectArgsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/17-re-render': {
      id: '/17-re-render'
      path: '/17-re-render'
      fullPath: '/17-re-render'
      preLoaderRoute: typeof R17ReRenderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/16-impure-component': {
      id: '/16-impure-component'
      path: '/16-impure-component'
      fullPath: '/16-impure-component'
      preLoaderRoute: typeof R16ImpureComponentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/15-side-effect': {
      id: '/15-side-effect'
      path: '/15-side-effect'
      fullPath: '/15-side-effect'
      preLoaderRoute: typeof R15SideEffectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/14-preserve-reset-state': {
      id: '/14-preserve-reset-state'
      path: '/14-preserve-reset-state'
      fullPath: '/14-preserve-reset-state'
      preLoaderRoute: typeof R14PreserveResetStateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/13-event-emission': {
      id: '/13-event-emission'
      path: '/13-event-emission'
      fullPath: '/13-event-emission'
      preLoaderRoute: typeof R13EventEmissionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/12-two-way-binding': {
      id: '/12-two-way-binding'
      path: '/12-two-way-binding'
      fullPath: '/12-two-way-binding'
      preLoaderRoute: typeof R12TwoWayBindingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/11-immer': {
      id: '/11-immer'
      path: '/11-immer'
      fullPath: '/11-immer'
      preLoaderRoute: typeof R11ImmerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/10-reference-types': {
      id: '/10-reference-types'
      path: '/10-reference-types'
      fullPath: '/10-reference-types'
      preLoaderRoute: typeof R10ReferenceTypesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/1-jsx': {
      id: '/1-jsx'
      path: '/1-jsx'
      fullPath: '/1-jsx'
      preLoaderRoute: typeof R1JsxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R1JsxRoute: R1JsxRoute,
  R10ReferenceTypesRoute: R10ReferenceTypesRoute,
  R11ImmerRoute: R11ImmerRoute,
  R12TwoWayBindingRoute: R12TwoWayBindingRoute,
  R13EventEmissionRoute: R13EventEmissionRoute,
  R14PreserveResetStateRoute: R14PreserveResetStateRoute,
  R15SideEffectRoute: R15SideEffectRoute,
  R16ImpureComponentRoute: R16ImpureComponentRoute,
  R17ReRenderRoute: R17ReRenderRoute,
  R18UseEffectArgsRoute: R18UseEffectArgsRoute,
  R19CleanupRoute: R19CleanupRoute,
  R2ComponentsRoute: R2ComponentsRoute,
  R20GroupStateRoute: R20GroupStateRoute,
  R21ContradictionsRoute: R21ContradictionsRoute,
  R22RedundantRoute: R22RedundantRoute,
  R23DuplicationRoute: R23DuplicationRoute,
  R24ReducerRoute: R24ReducerRoute,
  R25UseMemoRoute: R25UseMemoRoute,
  R26ContextRoute: R26ContextRoute,
  R27UiComponentRoute: R27UiComponentRoute,
  R28UseRefRoute: R28UseRefRoute,
  R29ForwardRefRoute: R29ForwardRefRoute,
  R3PropsRoute: R3PropsRoute,
  R30CustomHooksRoute: R30CustomHooksRoute,
  R4ChildrenRoute: R4ChildrenRoute,
  R5ConditionalRoute: R5ConditionalRoute,
  R6ListRoute: R6ListRoute,
  R7EventRoute: R7EventRoute,
  R8StateRoute: R8StateRoute,
  R9SnapshotRoute: R9SnapshotRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
